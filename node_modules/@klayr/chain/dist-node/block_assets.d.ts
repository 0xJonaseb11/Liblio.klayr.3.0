/// <reference types="node" />
import { JSONObject } from './types';
export interface BlockAsset {
    module: string;
    data: Buffer;
}
export type BlockAssetJSON = JSONObject<BlockAsset>;
export declare class BlockAssets {
    private readonly _assets;
    private _assetRoot;
    constructor(assets?: BlockAsset[]);
    static fromBytes(values: ReadonlyArray<Buffer>): BlockAssets;
    static fromJSON(values: Record<string, unknown>[]): BlockAssets;
    getRoot(): Promise<Buffer>;
    getBytes(): Buffer[];
    getAsset(module: string): Buffer | undefined;
    getAll(): BlockAsset[];
    toJSON(): BlockAssetJSON[];
    setAsset(module: string, value: Buffer): void;
    sort(): void;
    validate(): void;
    validateGenesis(): void;
    private _calculateRoot;
}
