export declare const blockAssetsJSON: ({
    module: string;
    data: {
        userSubstore: {
            address: string;
            tokenID: string;
            availableBalance: string;
            lockedBalances: never[];
        }[];
        supplySubstore: {
            tokenID: string;
            totalSupply: string;
        }[];
        escrowSubstore: never[];
        supportedTokensSubstore: never[];
        validators?: undefined;
        stakers?: undefined;
        genesisData?: undefined;
    };
    schema: {
        $id: string;
        type: string;
        required: string[];
        properties: {
            userSubstore: {
                type: string;
                fieldNumber: number;
                items: {
                    type: string;
                    required: string[];
                    properties: {
                        address: {
                            dataType: string;
                            format: string;
                            fieldNumber: number;
                        };
                        tokenID: {
                            dataType: string;
                            fieldNumber: number;
                            minLength: number;
                            maxLength: number;
                        };
                        availableBalance: {
                            dataType: string;
                            fieldNumber: number;
                        };
                        lockedBalances: {
                            type: string;
                            fieldNumber: number;
                            items: {
                                type: string;
                                required: string[];
                                properties: {
                                    module: {
                                        dataType: string;
                                        minLength: number;
                                        maxLength: number;
                                        fieldNumber: number;
                                    };
                                    amount: {
                                        dataType: string;
                                        fieldNumber: number;
                                    };
                                };
                            };
                        };
                    };
                };
            };
            supplySubstore: {
                type: string;
                fieldNumber: number;
                items: {
                    type: string;
                    required: string[];
                    properties: {
                        tokenID: {
                            dataType: string;
                            fieldNumber: number;
                            minLength: number;
                            maxLength: number;
                        };
                        totalSupply: {
                            dataType: string;
                            fieldNumber: number;
                        };
                    };
                };
            };
            escrowSubstore: {
                type: string;
                fieldNumber: number;
                items: {
                    type: string;
                    required: string[];
                    properties: {
                        escrowChainID: {
                            dataType: string;
                            minLength: number;
                            maxLength: number;
                            fieldNumber: number;
                        };
                        tokenID: {
                            dataType: string;
                            fieldNumber: number;
                            minLength: number;
                            maxLength: number;
                        };
                        amount: {
                            dataType: string;
                            fieldNumber: number;
                        };
                    };
                };
            };
            supportedTokensSubstore: {
                type: string;
                fieldNumber: number;
                items: {
                    type: string;
                    required: string[];
                    properties: {
                        chainID: {
                            dataType: string;
                            fieldNumber: number;
                        };
                        supportedTokenIDs: {
                            type: string;
                            fieldNumber: number;
                            items: {
                                dataType: string;
                                minLength: number;
                                maxLength: number;
                            };
                        };
                    };
                };
            };
        };
    };
} | {
    module: string;
    data: {
        validators: {
            address: string;
            name: string;
            blsKey: string;
            proofOfPossession: string;
            generatorKey: string;
            lastGeneratedHeight: number;
            isBanned: boolean;
            reportMisbehaviorHeights: never[];
            consecutiveMissedBlocks: number;
            commission: number;
            lastCommissionIncreaseHeight: number;
            sharingCoefficients: never[];
        }[];
        stakers: never[];
        genesisData: {
            initRounds: number;
            initValidators: string[];
        };
        userSubstore?: undefined;
        supplySubstore?: undefined;
        escrowSubstore?: undefined;
        supportedTokensSubstore?: undefined;
    };
    schema: {
        $id: string;
        type: string;
        required: string[];
        properties: {
            validators: {
                type: string;
                fieldNumber: number;
                items: {
                    type: string;
                    required: string[];
                    properties: {
                        address: {
                            dataType: string;
                            format: string;
                            fieldNumber: number;
                        };
                        name: {
                            dataType: string;
                            fieldNumber: number;
                            minLength: number;
                            maxLength: number;
                        };
                        blsKey: {
                            dataType: string;
                            fieldNumber: number;
                            minLength: number;
                            maxLength: number;
                        };
                        proofOfPossession: {
                            dataType: string;
                            fieldNumber: number;
                            minLength: number;
                            maxLength: number;
                        };
                        generatorKey: {
                            dataType: string;
                            fieldNumber: number;
                            minLength: number;
                            maxLength: number;
                        };
                        lastGeneratedHeight: {
                            dataType: string;
                            fieldNumber: number;
                        };
                        isBanned: {
                            dataType: string;
                            fieldNumber: number;
                        };
                        reportMisbehaviorHeights: {
                            type: string;
                            fieldNumber: number;
                            items: {
                                dataType: string;
                            };
                        };
                        consecutiveMissedBlocks: {
                            dataType: string;
                            fieldNumber: number;
                        };
                        commission: {
                            dataType: string;
                            fieldNumber: number;
                            maximum: number;
                        };
                        lastCommissionIncreaseHeight: {
                            dataType: string;
                            fieldNumber: number;
                        };
                        sharingCoefficients: {
                            type: string;
                            fieldNumber: number;
                            items: {
                                type: string;
                                required: string[];
                                properties: {
                                    tokenID: {
                                        dataType: string;
                                        minLength: number;
                                        maxLength: number;
                                        fieldNumber: number;
                                    };
                                    coefficient: {
                                        dataType: string;
                                        maxLength: number;
                                        fieldNumber: number;
                                    };
                                };
                            };
                        };
                    };
                };
            };
            stakers: {
                type: string;
                fieldNumber: number;
                items: {
                    type: string;
                    required: string[];
                    properties: {
                        address: {
                            dataType: string;
                            format: string;
                            fieldNumber: number;
                        };
                        stakes: {
                            type: string;
                            fieldNumber: number;
                            items: {
                                type: string;
                                required: string[];
                                properties: {
                                    validatorAddress: {
                                        dataType: string;
                                        format: string;
                                        fieldNumber: number;
                                    };
                                    amount: {
                                        dataType: string;
                                        fieldNumber: number;
                                    };
                                    sharingCoefficients: {
                                        type: string;
                                        fieldNumber: number;
                                        items: {
                                            type: string;
                                            required: string[];
                                            properties: {
                                                tokenID: {
                                                    dataType: string;
                                                    minLength: number;
                                                    maxLength: number;
                                                    fieldNumber: number;
                                                };
                                                coefficient: {
                                                    dataType: string;
                                                    maxLength: number;
                                                    fieldNumber: number;
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                        pendingUnlocks: {
                            type: string;
                            fieldNumber: number;
                            items: {
                                type: string;
                                required: string[];
                                properties: {
                                    validatorAddress: {
                                        dataType: string;
                                        fieldNumber: number;
                                        format: string;
                                    };
                                    amount: {
                                        dataType: string;
                                        fieldNumber: number;
                                    };
                                    unstakeHeight: {
                                        dataType: string;
                                        fieldNumber: number;
                                    };
                                };
                            };
                        };
                    };
                };
            };
            genesisData: {
                type: string;
                fieldNumber: number;
                required: string[];
                properties: {
                    initRounds: {
                        dataType: string;
                        fieldNumber: number;
                    };
                    initValidators: {
                        type: string;
                        fieldNumber: number;
                        items: {
                            dataType: string;
                            format: string;
                        };
                    };
                };
            };
        };
    };
})[];
