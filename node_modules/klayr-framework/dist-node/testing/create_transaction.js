"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTransaction = void 0;
const chain_1 = require("@klayr/chain");
const codec_1 = require("@klayr/codec");
const cryptography_1 = require("@klayr/cryptography");
const transactions_1 = require("@klayr/transactions");
const createTransaction = ({ module, commandClass, params, nonce, fee, passphrase, chainID, }) => {
    const { publicKey, privateKey } = cryptography_1.legacy.getPrivateAndPublicKeyFromPassphrase(passphrase !== null && passphrase !== void 0 ? passphrase : '');
    const commandInstance = new commandClass();
    const command = commandInstance.name;
    const paramsBytes = commandInstance.schema && params
        ? codec_1.codec.encode(commandInstance.schema, params)
        : Buffer.alloc(0);
    const transaction = {
        module,
        command,
        nonce: nonce !== null && nonce !== void 0 ? nonce : BigInt(0),
        fee: fee !== null && fee !== void 0 ? fee : BigInt(0),
        senderPublicKey: publicKey,
        params,
        signatures: [],
    };
    if (commandInstance.schema) {
        (0, transactions_1.validateTransaction)(transaction, commandInstance.schema);
    }
    const result = new chain_1.Transaction({ ...transaction, params: paramsBytes });
    if (!passphrase) {
        return result;
    }
    if (!chainID) {
        throw new Error('Network identifier is required to sign a transaction');
    }
    result.sign(chainID, privateKey);
    return result;
};
exports.createTransaction = createTransaction;
//# sourceMappingURL=create_transaction.js.map