import { Chain, TransactionJSON } from '@klayr/chain';
import { TransactionPool } from '@klayr/transaction-pool';
import { Broadcaster } from '../generator/broadcaster';
import { DryRunTransactionResponse, PostTransactionResponse } from '../generator/schemas';
import { RequestContext } from '../rpc/rpc_server';
import { ABI } from '../../abi';
interface EndpointArgs {
    abi: ABI;
    pool: TransactionPool;
    broadcaster: Broadcaster;
    chain: Chain;
}
export declare class TxpoolEndpoint {
    [key: string]: unknown;
    private readonly _abi;
    private readonly _pool;
    private readonly _broadcaster;
    private readonly _chain;
    constructor(args: EndpointArgs);
    postTransaction(ctx: RequestContext): Promise<PostTransactionResponse>;
    getTransactionsFromPool(ctx: RequestContext): Promise<TransactionJSON[]>;
    dryRunTransaction(ctx: RequestContext): Promise<DryRunTransactionResponse>;
}
export {};
