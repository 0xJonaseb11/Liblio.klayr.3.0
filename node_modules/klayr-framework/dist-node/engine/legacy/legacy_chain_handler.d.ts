import { Database } from '@liskhq/lisk-db';
import { LegacyConfig } from '../../types';
import { Network } from '../network';
import { Logger } from '../../logger';
interface LegacyChainHandlerArgs {
    legacyConfig: LegacyConfig;
    network: Network;
    logger: Logger;
}
interface LegacyHandlerInitArgs {
    db: Database;
}
export declare class LegacyChainHandler {
    private readonly _network;
    private _storage;
    private readonly _legacyConfig;
    private readonly _logger;
    private readonly _syncedBrackets;
    private _syncTimeout;
    constructor(args: LegacyChainHandlerArgs);
    init(args: LegacyHandlerInitArgs): Promise<void>;
    stop(): void;
    sync(): Promise<void>;
    private _trySyncBlocks;
    private _syncBlocks;
    private _updateBracketInfo;
    private applyPenaltyOnSyncFailure;
    private _applyValidation;
}
export {};
