"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MultisignatureRegistrationEvent = exports.multisigRegDataSchema = void 0;
const base_event_1 = require("../../base_event");
const constants_1 = require("../constants");
exports.multisigRegDataSchema = {
    $id: '/auth/events/multisigRegData',
    type: 'object',
    required: ['numberOfSignatures', 'mandatoryKeys', 'optionalKeys'],
    properties: {
        numberOfSignatures: {
            dataType: 'uint32',
            fieldNumber: 1,
        },
        mandatoryKeys: {
            type: 'array',
            items: {
                dataType: 'bytes',
                minLength: constants_1.ED25519_PUBLIC_KEY_LENGTH,
                maxLength: constants_1.ED25519_PUBLIC_KEY_LENGTH,
            },
            fieldNumber: 2,
        },
        optionalKeys: {
            type: 'array',
            items: {
                dataType: 'bytes',
                minLength: constants_1.ED25519_PUBLIC_KEY_LENGTH,
                maxLength: constants_1.ED25519_PUBLIC_KEY_LENGTH,
            },
            fieldNumber: 3,
        },
    },
};
class MultisignatureRegistrationEvent extends base_event_1.BaseEvent {
    constructor() {
        super(...arguments);
        this.schema = exports.multisigRegDataSchema;
    }
    log(ctx, senderAddress, data) {
        this.add(ctx, data, [senderAddress]);
    }
}
exports.MultisignatureRegistrationEvent = MultisignatureRegistrationEvent;
//# sourceMappingURL=multisignature_registration.js.map