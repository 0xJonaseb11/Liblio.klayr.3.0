import { BlockAfterExecuteContext, BlockVerifyContext, GenesisBlockExecuteContext, InsertAssetContext } from '../../state_machine';
import { BaseModule, ModuleInitArgs, ModuleMetadata } from '../base_module';
import { RandomMethod } from './method';
import { RandomEndpoint } from './endpoint';
export declare class RandomModule extends BaseModule {
    method: RandomMethod;
    endpoint: RandomEndpoint;
    private _maxLengthReveals;
    constructor();
    metadata(): ModuleMetadata;
    init(args: ModuleInitArgs): Promise<void>;
    insertAssets(context: InsertAssetContext): Promise<void>;
    verifyAssets(context: BlockVerifyContext): Promise<void>;
    initGenesisState(context: GenesisBlockExecuteContext): Promise<void>;
    afterTransactionsExecute(context: BlockAfterExecuteContext): Promise<void>;
    private _getNextHashOnion;
    private _getHashOnion;
}
