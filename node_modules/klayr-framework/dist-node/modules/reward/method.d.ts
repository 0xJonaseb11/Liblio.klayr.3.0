import { ImmutableMethodContext, BlockHeader, BlockAssets } from '../../state_machine';
import { BaseMethod } from '../base_method';
import { ModuleConfig, RandomMethod } from './types';
interface MethodInitArgs {
    config: ModuleConfig;
}
export declare class RewardMethod extends BaseMethod {
    private _randomMethod;
    private _config;
    init(args: MethodInitArgs): void;
    addDependencies(randomMethod: RandomMethod): void;
    getBlockReward(context: ImmutableMethodContext, header: BlockHeader, assets: BlockAssets): Promise<[bigint, number]>;
}
export {};
