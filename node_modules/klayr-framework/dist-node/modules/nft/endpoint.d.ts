import { BaseEndpoint } from '../base_endpoint';
import { JSONObject, ModuleEndpointContext } from '../../types';
import { NFTJSON } from './types';
import { NFTMethod } from './method';
export declare class NFTEndpoint extends BaseEndpoint {
    private _nftMethod;
    addDependencies(nftMethod: NFTMethod): void;
    getNFTs(context: ModuleEndpointContext): Promise<{
        nfts: JSONObject<Omit<NFTJSON, 'owner'> & {
            id: string;
        }>[];
    }>;
    hasNFT(context: ModuleEndpointContext): Promise<{
        hasNFT: boolean;
    }>;
    getNFT(context: ModuleEndpointContext): Promise<JSONObject<NFTJSON>>;
    getSupportedCollectionIDs(context: ModuleEndpointContext): Promise<{
        supportedCollectionIDs: string[];
    }>;
    isCollectionIDSupported(context: ModuleEndpointContext): Promise<{
        isCollectionIDSupported: boolean;
    }>;
    getEscrowedNFTIDs(context: ModuleEndpointContext): Promise<{
        escrowedNFTIDs: string[];
    }>;
    isNFTSupported(context: ModuleEndpointContext): Promise<{
        isNFTSupported: boolean;
    }>;
    getSupportedNFTs(context: ModuleEndpointContext): Promise<{
        supportedNFTs: string[];
    }>;
}
