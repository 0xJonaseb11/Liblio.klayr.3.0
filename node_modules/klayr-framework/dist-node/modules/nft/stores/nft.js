"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NFTStore = exports.nftStoreSchema = void 0;
const base_store_1 = require("../../base_store");
const constants_1 = require("../constants");
exports.nftStoreSchema = {
    $id: '/nft/store/nft',
    type: 'object',
    required: ['owner', 'attributesArray'],
    properties: {
        owner: {
            dataType: 'bytes',
            fieldNumber: 1,
        },
        attributesArray: {
            type: 'array',
            fieldNumber: 2,
            items: {
                type: 'object',
                required: ['module', 'attributes'],
                properties: {
                    module: {
                        dataType: 'string',
                        minLength: constants_1.MIN_LENGTH_MODULE_NAME,
                        maxLength: constants_1.MAX_LENGTH_MODULE_NAME,
                        pattern: '^[a-zA-Z0-9]*$',
                        fieldNumber: 1,
                    },
                    attributes: {
                        dataType: 'bytes',
                        fieldNumber: 2,
                    },
                },
            },
        },
    },
};
class NFTStore extends base_store_1.BaseStore {
    constructor() {
        super(...arguments);
        this.schema = exports.nftStoreSchema;
    }
    async save(context, nftID, data) {
        const attributesArray = data.attributesArray.filter(attribute => attribute.attributes.length > 0);
        attributesArray.sort((a, b) => a.module.localeCompare(b.module, 'en'));
        await this.set(context, nftID, {
            ...data,
            attributesArray,
        });
    }
}
exports.NFTStore = NFTStore;
//# sourceMappingURL=nft.js.map