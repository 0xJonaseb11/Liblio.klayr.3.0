"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransferCommand = void 0;
const state_machine_1 = require("../../../state_machine");
const base_command_1 = require("../../base_command");
const schemas_1 = require("../schemas");
class TransferCommand extends base_command_1.BaseCommand {
    constructor() {
        super(...arguments);
        this.schema = schemas_1.transferParamsSchema;
    }
    init(args) {
        this._internalMethod = args.internalMethod;
    }
    async verify(context) {
        const { params } = context;
        try {
            await this._internalMethod.verifyTransfer(context.getMethodContext(), context.transaction.senderAddress, params.nftID);
        }
        catch (error) {
            return {
                status: state_machine_1.VerifyStatus.FAIL,
                error: error,
            };
        }
        return {
            status: state_machine_1.VerifyStatus.OK,
        };
    }
    async execute(context) {
        const { params } = context;
        await this._internalMethod.transfer(context.getMethodContext(), params.recipientAddress, params.nftID);
    }
}
exports.TransferCommand = TransferCommand;
//# sourceMappingURL=transfer.js.map