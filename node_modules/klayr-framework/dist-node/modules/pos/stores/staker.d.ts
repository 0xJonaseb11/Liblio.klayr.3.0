/// <reference types="node" />
import { BaseStore, ImmutableStoreGetter } from '../../base_store';
import { StakerData } from '../types';
export declare const stakerStoreSchema: {
    $id: string;
    type: string;
    required: string[];
    properties: {
        stakes: {
            type: string;
            fieldNumber: number;
            items: {
                type: string;
                required: string[];
                properties: {
                    validatorAddress: {
                        dataType: string;
                        fieldNumber: number;
                        format: string;
                    };
                    amount: {
                        dataType: string;
                        fieldNumber: number;
                    };
                    sharingCoefficients: {
                        type: string;
                        fieldNumber: number;
                        items: {
                            type: string;
                            required: string[];
                            properties: {
                                tokenID: {
                                    dataType: string;
                                    fieldNumber: number;
                                    minLength: number;
                                    maxLength: number;
                                };
                                coefficient: {
                                    dataType: string;
                                    fieldNumber: number;
                                    maxLength: number;
                                };
                            };
                        };
                    };
                };
            };
        };
        pendingUnlocks: {
            type: string;
            fieldNumber: number;
            items: {
                type: string;
                required: string[];
                properties: {
                    validatorAddress: {
                        dataType: string;
                        fieldNumber: number;
                        format: string;
                    };
                    amount: {
                        dataType: string;
                        fieldNumber: number;
                    };
                    unstakeHeight: {
                        dataType: string;
                        fieldNumber: number;
                    };
                };
            };
        };
    };
};
export declare class StakerStore extends BaseStore<StakerData> {
    schema: {
        $id: string;
        type: string;
        required: string[];
        properties: {
            stakes: {
                type: string;
                fieldNumber: number;
                items: {
                    type: string;
                    required: string[];
                    properties: {
                        validatorAddress: {
                            dataType: string;
                            fieldNumber: number;
                            format: string;
                        };
                        amount: {
                            dataType: string;
                            fieldNumber: number;
                        };
                        sharingCoefficients: {
                            type: string;
                            fieldNumber: number;
                            items: {
                                type: string;
                                required: string[];
                                properties: {
                                    tokenID: {
                                        dataType: string;
                                        fieldNumber: number;
                                        minLength: number;
                                        maxLength: number;
                                    };
                                    coefficient: {
                                        dataType: string;
                                        fieldNumber: number;
                                        maxLength: number;
                                    };
                                };
                            };
                        };
                    };
                };
            };
            pendingUnlocks: {
                type: string;
                fieldNumber: number;
                items: {
                    type: string;
                    required: string[];
                    properties: {
                        validatorAddress: {
                            dataType: string;
                            fieldNumber: number;
                            format: string;
                        };
                        amount: {
                            dataType: string;
                            fieldNumber: number;
                        };
                        unstakeHeight: {
                            dataType: string;
                            fieldNumber: number;
                        };
                    };
                };
            };
        };
    };
    getOrDefault(context: ImmutableStoreGetter, address: Buffer): Promise<StakerData>;
}
