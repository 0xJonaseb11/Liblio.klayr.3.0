/// <reference types="node" />
export declare const MODULE_NAME_POS = "pos";
export declare const COMMAND_NAME_VALIDATOR_REGISTRATION = "registerValidator";
export declare const LOCKING_PERIOD_STAKING = 25920;
export declare const LOCKING_PERIOD_SELF_STAKING = 241920;
export declare const PUNISHMENT_WINDOW_STAKING = 241920;
export declare const PUNISHMENT_WINDOW_SELF_STAKING = 725760;
export declare const MAX_LENGTH_NAME = 20;
export declare const BASE_STAKE_AMOUNT: bigint;
export declare const MAX_NUMBER_SENT_STAKES = 10;
export declare const MAX_NUMBER_PENDING_UNLOCKS = 20;
export declare const VALIDATOR_REGISTRATION_FEE: bigint;
export declare const MAX_PUNISHABLE_BLOCK_HEIGHT_DIFFERENCE = 260000;
export declare const REPORT_MISBEHAVIOR_LIMIT_BANNED = 5;
export declare const REPORT_MISBEHAVIOR_REWARD: bigint;
export declare const VALIDATOR_LIST_ROUND_OFFSET = 2;
export declare const EMPTY_KEY: Buffer;
export declare const MAX_SNAPSHOT = 3;
export declare const CHAIN_ID_LENGTH = 4;
export declare const LOCAL_ID_LENGTH = 4;
export declare const TOKEN_ID_LENGTH: number;
export declare const MAX_NUMBER_BYTES_Q96 = 24;
export declare const COMMISSION = 10000;
export declare const COMMISSION_INCREASE_PERIOD = 241920;
export declare const MAX_COMMISSION_INCREASE_RATE = 500;
export declare const FACTOR_SELF_STAKES = 10;
export declare const ED25519_PUBLIC_KEY_LENGTH = 32;
export declare const BLS_PUBLIC_KEY_LENGTH = 48;
export declare const BLS_POP_LENGTH = 96;
export declare const MAX_CAP = 10000;
export declare const MAX_COMMISSION = 10000;
export declare const MIN_WEIGHT: bigint;
export declare const WEIGHT_SCALE_FACTOR: bigint;
export declare const defaultConfig: {
    factorSelfStakes: number;
    maxLengthName: number;
    maxNumberSentStakes: number;
    maxNumberPendingUnlocks: number;
    failSafeMissedBlocks: number;
    failSafeInactiveWindow: number;
    punishmentWindowStaking: number;
    punishmentWindowSelfStaking: number;
    minWeightStandby: string;
    numberActiveValidators: number;
    numberStandbyValidators: number;
    validatorRegistrationFee: string;
    maxBFTWeightCap: number;
    commissionIncreasePeriod: number;
    maxCommissionIncreaseRate: number;
    useInvalidBLSKey: boolean;
    baseStakeAmount: string;
    lockingPeriodStaking: number;
    lockingPeriodSelfStaking: number;
    reportMisbehaviorReward: string;
    reportMisbehaviorLimitBanned: number;
    weightScaleFactor: string;
};
export declare const enum PoSEventResult {
    STAKE_SUCCESSFUL = 0,
    STAKE_FAILED_NON_REGISTERED_VALIDATOR = 1,
    STAKE_FAILED_INVALID_UNSTAKE_PARAMETERS = 2,
    STAKE_FAILED_TOO_MANY_PENDING_UNLOCKS = 3,
    STAKE_FAILED_TOO_MANY_SENT_STAKES = 4
}
