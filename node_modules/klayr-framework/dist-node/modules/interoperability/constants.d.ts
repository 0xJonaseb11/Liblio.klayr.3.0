/// <reference types="node" />
export declare const MODULE_NAME_INTEROPERABILITY = "interoperability";
export declare const CHAIN_NAME_MAINCHAIN = "klayr_mainchain";
export declare const MAX_RESERVED_ERROR_STATUS = 63;
export declare const BLS_PUBLIC_KEY_LENGTH = 48;
export declare const BLS_SIGNATURE_LENGTH = 96;
export declare const SMT_KEY_LENGTH = 38;
export declare const NUMBER_ACTIVE_VALIDATORS_MAINCHAIN = 51;
export declare const MESSAGE_TAG_CHAIN_REG = "KLY_CRM_";
export declare const LIVENESS_LIMIT = 2419200;
export declare const MAX_CCM_SIZE = 10240;
export declare const EMPTY_FEE_ADDRESS: Buffer;
export declare const EMPTY_BYTES: Buffer;
export declare const EMPTY_HASH: Buffer;
export declare const CHAIN_REGISTRATION_FEE: bigint;
export declare const MAX_NUM_VALIDATORS = 199;
export declare const MAX_LENGTH_AGGREGATION_BITS: number;
export declare const MAX_LENGTH_NAME = 40;
export declare const MAX_UINT32 = 4294967295;
export declare const MAX_UINT64: bigint;
export declare const MESSAGE_TAG_CERTIFICATE = "KLY_CE_";
export declare const MIN_CHAIN_NAME_LENGTH = 1;
export declare const MAX_CHAIN_NAME_LENGTH = 32;
export declare const HASH_LENGTH = 32;
export declare const MIN_MODULE_NAME_LENGTH = 1;
export declare const MAX_MODULE_NAME_LENGTH = 32;
export declare const MIN_CROSS_CHAIN_COMMAND_NAME_LENGTH = 1;
export declare const MAX_CROSS_CHAIN_COMMAND_NAME_LENGTH = 32;
export declare const CHAIN_ID_LENGTH = 4;
export declare const CHAIN_ID_STRING_LENGTH: number;
export declare const SUBSTORE_PREFIX_LENGTH = 2;
export declare const MIN_RETURN_FEE_PER_BYTE_BEDDOWS: bigint;
export declare const STORE_PREFIX: Buffer;
export declare const CROSS_CHAIN_COMMAND_REGISTRATION = "registration";
export declare const CROSS_CHAIN_COMMAND_CHANNEL_TERMINATED = "channelTerminated";
export declare const CROSS_CHAIN_COMMAND_SIDECHAIN_TERMINATED = "sidechainTerminated";
export declare const enum CCMStatusCode {
    OK = 0,
    CHANNEL_UNAVAILABLE = 1,
    MODULE_NOT_SUPPORTED = 2,
    CROSS_CHAIN_COMMAND_NOT_SUPPORTED = 3,
    FAILED_CCM = 4,
    RECOVERED = 5
}
export declare const CCM_SENT_STATUS_SUCCESS = 0;
export declare const COMMAND_NAME_SIDECHAIN_REG = "registerSidechain";
export declare const COMMAND_NAME_MAINCHAIN_REG = "registerMainchain";
export declare const COMMAND_NAME_STATE_RECOVERY = "recoverState";
export declare const COMMAND_NAME_MESSAGE_RECOVERY = "recoverMessage";
export declare const COMMAND_NAME_STATE_RECOVERY_INIT = "initializeStateRecovery";
export declare const COMMAND_NAME_LIVENESS_TERMINATION = "terminateSidechainForLiveness";
export declare const RECOVERED_STORE_VALUE: Buffer;
export declare const EVENT_NAME_CHAIN_ACCOUNT_UPDATED = "chainAccountUpdated";
export declare const EVENT_NAME_CCM_PROCESSED = "ccmProcessed";
export declare const EVENT_NAME_CCM_SEND_SUCCESS = "ccmSendSucess";
export declare const EVENT_NAME_INVALID_CERTIFICATE_SIGNATURE = "invalidCertificateSignature";
export declare const EVENT_NAME_INVALID_OUTBOX_ROOT_VERIFICATION = "invalidOutboxRootVerification";
export declare const CONTEXT_STORE_KEY_CCM_PROCESSING = "CONTEXT_STORE_KEY_CCM_PROCESSING";
export declare const EVENT_TOPIC_CCM_EXECUTION: Buffer;
export declare const EmptyCCM: {
    module: string;
    crossChainCommand: string;
    nonce: bigint;
    fee: bigint;
    sendingChainID: Buffer;
    receivingChainID: Buffer;
    params: Buffer;
    status: number;
};
