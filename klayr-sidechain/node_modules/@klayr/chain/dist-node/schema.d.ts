export declare const blockSchema: {
    $id: string;
    type: string;
    properties: {
        header: {
            dataType: string;
            fieldNumber: number;
        };
        transactions: {
            type: string;
            items: {
                dataType: string;
            };
            fieldNumber: number;
        };
        assets: {
            type: string;
            items: {
                dataType: string;
            };
            fieldNumber: number;
        };
    };
    required: string[];
};
export declare const signingBlockHeaderSchema: {
    $id: string;
    type: string;
    properties: {
        version: {
            dataType: string;
            fieldNumber: number;
        };
        timestamp: {
            dataType: string;
            fieldNumber: number;
        };
        height: {
            dataType: string;
            fieldNumber: number;
        };
        previousBlockID: {
            dataType: string;
            fieldNumber: number;
        };
        generatorAddress: {
            dataType: string;
            fieldNumber: number;
            format: string;
        };
        transactionRoot: {
            dataType: string;
            fieldNumber: number;
        };
        assetRoot: {
            dataType: string;
            fieldNumber: number;
        };
        eventRoot: {
            dataType: string;
            fieldNumber: number;
        };
        stateRoot: {
            dataType: string;
            fieldNumber: number;
        };
        maxHeightPrevoted: {
            dataType: string;
            fieldNumber: number;
        };
        maxHeightGenerated: {
            dataType: string;
            fieldNumber: number;
        };
        impliesMaxPrevotes: {
            dataType: string;
            fieldNumber: number;
        };
        validatorsHash: {
            dataType: string;
            fieldNumber: number;
        };
        aggregateCommit: {
            type: string;
            fieldNumber: number;
            required: string[];
            properties: {
                height: {
                    dataType: string;
                    fieldNumber: number;
                };
                aggregationBits: {
                    dataType: string;
                    fieldNumber: number;
                };
                certificateSignature: {
                    dataType: string;
                    fieldNumber: number;
                };
            };
        };
    };
    required: string[];
};
export declare const blockHeaderSchema: {
    $id: string;
    required: string[];
    properties: {
        signature: {
            dataType: string;
            fieldNumber: number;
        };
        version: {
            dataType: string;
            fieldNumber: number;
        };
        timestamp: {
            dataType: string;
            fieldNumber: number;
        };
        height: {
            dataType: string;
            fieldNumber: number;
        };
        previousBlockID: {
            dataType: string;
            fieldNumber: number;
        };
        generatorAddress: {
            dataType: string;
            fieldNumber: number;
            format: string;
        };
        transactionRoot: {
            dataType: string;
            fieldNumber: number;
        };
        assetRoot: {
            dataType: string;
            fieldNumber: number;
        };
        eventRoot: {
            dataType: string;
            fieldNumber: number;
        };
        stateRoot: {
            dataType: string;
            fieldNumber: number;
        };
        maxHeightPrevoted: {
            dataType: string;
            fieldNumber: number;
        };
        maxHeightGenerated: {
            dataType: string;
            fieldNumber: number;
        };
        impliesMaxPrevotes: {
            dataType: string;
            fieldNumber: number;
        };
        validatorsHash: {
            dataType: string;
            fieldNumber: number;
        };
        aggregateCommit: {
            type: string;
            fieldNumber: number;
            required: string[];
            properties: {
                height: {
                    dataType: string;
                    fieldNumber: number;
                };
                aggregationBits: {
                    dataType: string;
                    fieldNumber: number;
                };
                certificateSignature: {
                    dataType: string;
                    fieldNumber: number;
                };
            };
        };
    };
    type: string;
};
export declare const blockHeaderSchemaWithId: {
    $id: string;
    required: string[];
    properties: {
        id: {
            dataType: string;
            fieldNumber: number;
        };
        signature: {
            dataType: string;
            fieldNumber: number;
        };
        version: {
            dataType: string;
            fieldNumber: number;
        };
        timestamp: {
            dataType: string;
            fieldNumber: number;
        };
        height: {
            dataType: string;
            fieldNumber: number;
        };
        previousBlockID: {
            dataType: string;
            fieldNumber: number;
        };
        generatorAddress: {
            dataType: string;
            fieldNumber: number;
            format: string;
        };
        transactionRoot: {
            dataType: string;
            fieldNumber: number;
        };
        assetRoot: {
            dataType: string;
            fieldNumber: number;
        };
        eventRoot: {
            dataType: string;
            fieldNumber: number;
        };
        stateRoot: {
            dataType: string;
            fieldNumber: number;
        };
        maxHeightPrevoted: {
            dataType: string;
            fieldNumber: number;
        };
        maxHeightGenerated: {
            dataType: string;
            fieldNumber: number;
        };
        impliesMaxPrevotes: {
            dataType: string;
            fieldNumber: number;
        };
        validatorsHash: {
            dataType: string;
            fieldNumber: number;
        };
        aggregateCommit: {
            type: string;
            fieldNumber: number;
            required: string[];
            properties: {
                height: {
                    dataType: string;
                    fieldNumber: number;
                };
                aggregationBits: {
                    dataType: string;
                    fieldNumber: number;
                };
                certificateSignature: {
                    dataType: string;
                    fieldNumber: number;
                };
            };
        };
    };
    type: string;
};
export declare const blockAssetSchema: {
    $id: string;
    type: string;
    required: string[];
    properties: {
        module: {
            dataType: string;
            fieldNumber: number;
        };
        data: {
            dataType: string;
            fieldNumber: number;
        };
    };
};
export declare const inclusionProofSchema: {
    $id: string;
    type: string;
    required: string[];
    properties: {
        siblingHashes: {
            type: string;
            fieldNumber: number;
            items: {
                dataType: string;
            };
        };
        queries: {
            type: string;
            fieldNumber: number;
            items: {
                type: string;
                properties: {
                    key: {
                        dataType: string;
                        fieldNumber: number;
                    };
                    value: {
                        dataType: string;
                        fieldNumber: number;
                    };
                    bitmap: {
                        dataType: string;
                        fieldNumber: number;
                    };
                };
            };
        };
    };
};
export declare const stateDiffSchema: {
    $id: string;
    type: string;
    required: string[];
    properties: {
        updated: {
            type: string;
            fieldNumber: number;
            items: {
                type: string;
                required: string[];
                properties: {
                    key: {
                        dataType: string;
                        fieldNumber: number;
                    };
                    value: {
                        dataType: string;
                        fieldNumber: number;
                    };
                };
            };
        };
        created: {
            type: string;
            fieldNumber: number;
            items: {
                dataType: string;
            };
        };
        deleted: {
            type: string;
            fieldNumber: number;
            items: {
                type: string;
                required: string[];
                properties: {
                    key: {
                        dataType: string;
                        fieldNumber: number;
                    };
                    value: {
                        dataType: string;
                        fieldNumber: number;
                    };
                };
            };
        };
    };
};
export declare const eventSchema: {
    $id: string;
    type: string;
    required: string[];
    properties: {
        module: {
            dataType: string;
            minLength: number;
            maxLength: number;
            fieldNumber: number;
        };
        name: {
            dataType: string;
            minLength: number;
            maxLength: number;
            fieldNumber: number;
        };
        data: {
            dataType: string;
            fieldNumber: number;
        };
        topics: {
            type: string;
            fieldNumber: number;
            maxItems: number;
            items: {
                dataType: string;
            };
        };
        height: {
            dataType: string;
            fieldNumber: number;
        };
        index: {
            dataType: string;
            fieldNumber: number;
            maximum: number;
        };
    };
};
export declare const standardEventDataSchema: {
    $id: string;
    type: string;
    required: string[];
    properties: {
        success: {
            dataType: string;
            fieldNumber: number;
        };
    };
};
