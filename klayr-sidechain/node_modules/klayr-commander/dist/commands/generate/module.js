"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const base_bootstrap_command_1 = require("../../base_bootstrap_command");
class ModuleCommand extends base_bootstrap_command_1.default {
    async run() {
        const { args: { moduleName }, } = await this.parse(ModuleCommand);
        const regexWhitespace = /\s/g;
        const regexCamelCase = /[a-z]+((\d)|([A-Z0-9][a-z0-9]+))*([A-Z])?/;
        const regexAlphabets = /[^A-Za-z]/;
        if (!regexCamelCase.test(moduleName) ||
            regexWhitespace.test(moduleName) ||
            regexAlphabets.test(moduleName)) {
            this.error('Invalid module name');
        }
        if (!this._isKlayrappDir(process.cwd())) {
            this.error('You can run this command only in klayr app directory. Run "klayr init --help" command for more details.');
        }
        this.log(`Creating module skeleton with module name "${moduleName}"`);
        return this._runBootstrapCommand('klayr:generate:module', {
            moduleName: moduleName,
        });
    }
}
ModuleCommand.description = 'Creates a module skeleton for the given name.';
ModuleCommand.examples = ['generate:module nft'];
ModuleCommand.args = [
    {
        name: 'moduleName',
        description: 'Module name.',
        required: true,
    },
];
exports.default = ModuleCommand;
//# sourceMappingURL=module.js.map