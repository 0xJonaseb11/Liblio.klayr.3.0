/// <reference types="node" />
import * as klayrapiClient from '@klayr/api-client';
import { Modules, Types } from 'klayr-framework';
import { Schema } from '../types';
export declare const getParamsSchema: (metadata: Modules.ModuleMetadataJSON[], module: string, command: string) => Schema;
export declare const decodeTransaction: (schema: Types.RegisteredSchema, metadata: Modules.ModuleMetadataJSON[], transactionHexStr: string) => {
    params: Record<string, unknown>;
    id: string;
    module: string;
    command: string;
    senderPublicKey: string;
    nonce: string;
    fee: string;
    signatures: readonly string[];
};
export declare const encodeTransaction: (schema: Types.RegisteredSchema, metadata: Modules.ModuleMetadataJSON[], transaction: Record<string, unknown>, apiClient?: klayrapiClient.APIClient) => Buffer;
export declare const encodeTransactionJSON: (schema: Types.RegisteredSchema, metadata: Modules.ModuleMetadataJSON[], transaction: Record<string, unknown>, apiClient?: klayrapiClient.APIClient) => Buffer;
export declare const transactionToJSON: (schema: Types.RegisteredSchema, metadata: Modules.ModuleMetadataJSON[], transaction: Record<string, unknown>, apiClient?: klayrapiClient.APIClient) => Record<string, unknown>;
export declare const getApiClient: (appDataPath: string | undefined, name: string) => Promise<klayrapiClient.APIClient>;
