import { Schema } from '@klayr/codec';
interface NestedAsset {
    [key: string]: Array<Record<string, unknown>>;
}
export declare const getPassphraseFromPrompt: (displayName?: string, shouldConfirm?: boolean) => Promise<string>;
export declare const getPasswordFromPrompt: (displayName?: string, shouldConfirm?: boolean) => Promise<string>;
export declare const isFileSource: (source?: string) => boolean;
export declare const readFileSource: (source?: string) => Promise<string>;
export declare const readStdIn: () => Promise<string[]>;
export declare const getParamsFromPrompt: (assetSchema: Schema | {
    properties: Record<string, unknown>;
}) => Promise<NestedAsset | Record<string, unknown>>;
export declare const checkFileExtension: (filePath: string) => void;
export declare const readParamsFile: (filePath: string) => string;
export declare const getFileParams: (filePath: string) => string;
export {};
