"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@oclif/core");
const fs_1 = require("fs");
const path_1 = require("path");
const env_1 = require("./bootstrapping/env");
class BaseBootstrapCommand extends core_1.Command {
    async finally(error) {
        if (error) {
            this.error(error instanceof Error ? error.message : error);
        }
    }
    async init() {
        const { flags } = await this.parse(this.constructor);
        this.bootstrapFlags = flags;
        process.stdout.on('error', (err) => {
            if (err.errno !== 'EPIPE') {
                throw err;
            }
        });
    }
    _isKlayrappDir(path) {
        return (0, fs_1.existsSync)((0, path_1.join)(path, '.klayrrc.json'));
    }
    async _runBootstrapCommand(command, opts) {
        await env_1.env.run(command, {
            ...opts,
            template: this.bootstrapFlags.template,
            version: this.config.version,
        });
    }
}
BaseBootstrapCommand.flags = {
    template: core_1.Flags.string({
        char: 't',
        description: 'Template to bootstrap the application. It will read from `.klayrrc.json` or use `klayr-ts` if not found.',
    }),
};
exports.default = BaseBootstrapCommand;
//# sourceMappingURL=base_bootstrap_command.js.map