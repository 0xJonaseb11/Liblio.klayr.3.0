"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DecryptCommand = void 0;
const cryptography = require("@klayr/cryptography");
const core_1 = require("@oclif/core");
const fs = require("fs-extra");
const flags_1 = require("../../../utils/flags");
const reader_1 = require("../../../utils/reader");
class DecryptCommand extends core_1.Command {
    async run() {
        var _a;
        const { flags } = await this.parse(DecryptCommand);
        const { encryptedPassphrase } = fs.readJSONSync(flags['file-path']);
        const password = (_a = flags.password) !== null && _a !== void 0 ? _a : (await (0, reader_1.getPasswordFromPrompt)('password'));
        const passphrase = await cryptography.encrypt.decryptMessageWithPassword(encryptedPassphrase, password, 'utf-8');
        this.log(JSON.stringify(passphrase, undefined, '  '));
    }
}
DecryptCommand.description = 'Decrypt secret passphrase using the password provided at the time of encryption.';
DecryptCommand.examples = [
    'passphrase:decrypt --file-path ./my/path/output.json',
    'passphrase:decrypt --file-path ./my/path/output.json --password your-password',
];
DecryptCommand.flags = {
    password: flags_1.flagsWithParser.password,
    'file-path': core_1.Flags.string({
        char: 'f',
        description: 'Path of the file to import from',
        required: true,
    }),
};
exports.DecryptCommand = DecryptCommand;
//# sourceMappingURL=decrypt.js.map