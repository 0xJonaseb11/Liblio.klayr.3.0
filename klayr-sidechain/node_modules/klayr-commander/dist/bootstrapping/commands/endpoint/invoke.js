"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvokeCommand = void 0;
const fs = require("fs-extra");
const core_1 = require("@oclif/core");
const base_ipc_client_1 = require("../base_ipc_client");
class InvokeCommand extends base_ipc_client_1.BaseIPCClientCommand {
    async run() {
        const { args, flags } = await this.parse(InvokeCommand);
        if (!this._client) {
            this.error('APIClient is not initialized.');
        }
        let response;
        let endpointArguments;
        try {
            if (flags.file !== undefined) {
                if (fs.existsSync(flags.file)) {
                    endpointArguments = JSON.parse(fs.readFileSync(flags.file, 'utf8'));
                }
                else {
                    this.error(`${flags.file} does not exist.`);
                }
            }
            else if (args.params !== undefined) {
                endpointArguments = JSON.parse(args.params);
            }
            if (endpointArguments === undefined) {
                response = await this._client.invoke(args.endpoint);
            }
            else {
                response = await this._client.invoke(args.endpoint, endpointArguments);
            }
            this.printJSON(response);
        }
        catch (error) {
            this.error(error.message);
        }
    }
}
InvokeCommand.description = 'Invokes the provided endpoint.';
InvokeCommand.examples = [
    'endpoint:invoke {endpoint} {parameters}',
    'endpoint:invoke --data-path --file',
    `endpoint:invoke generator_getAllKeys`,
    `endpoint:invoke consensus_getBFTParameters '{"height": 2}' -d ~/.klayr/pos-mainchain --pretty`,
    `endpoint:invoke consensus_getBFTParameters -f ./input.json`,
];
InvokeCommand.flags = {
    ...base_ipc_client_1.BaseIPCClientCommand.flags,
    file: core_1.Flags.string({
        char: 'f',
        description: 'Input file.',
    }),
};
InvokeCommand.args = [
    {
        name: 'endpoint',
        description: 'Endpoint to invoke',
        required: true,
    },
    {
        name: 'params',
        description: 'Endpoint parameters (Optional)',
        required: false,
    },
];
exports.InvokeCommand = InvokeCommand;
//# sourceMappingURL=invoke.js.map