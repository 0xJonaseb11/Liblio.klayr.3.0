import { BaseIPCClientCommand } from '../base_ipc_client';
export declare abstract class ExportCommand extends BaseIPCClientCommand {
    static description: string;
    static examples: string[];
    static flags: {
        output: {
            name: string;
            char?: import("@oclif/core/lib/interfaces").AlphabetLowercase | import("@oclif/core/lib/interfaces").AlphabetUppercase | undefined;
            summary?: string | undefined;
            description?: string | undefined;
            helpLabel?: string | undefined;
            helpGroup?: string | undefined;
            env?: string | undefined;
            hidden?: boolean | undefined;
            required?: boolean | undefined;
            dependsOn?: string[] | undefined;
            exclusive?: string[] | undefined;
            exactlyOne?: string[] | undefined;
            relationships?: import("@oclif/core/lib/interfaces/parser").Relationship[] | undefined;
            deprecated?: true | import("@oclif/core/lib/interfaces/parser").Deprecation | undefined;
            aliases?: string[] | undefined;
            deprecateAliases?: boolean | undefined;
            parse: import("@oclif/core/lib/interfaces/parser").FlagParser<string, string, any>;
            type: "option";
            helpValue?: string | undefined;
            options?: string[] | undefined;
            multiple: false;
            defaultHelp?: import("@oclif/core/lib/interfaces/parser").DefaultHelp<string, Record<string, unknown>> | undefined;
            input: string[];
            default?: import("@oclif/core/lib/interfaces").Default<string | undefined, Record<string, unknown>>;
        } | {
            name: string;
            char?: import("@oclif/core/lib/interfaces").AlphabetLowercase | import("@oclif/core/lib/interfaces").AlphabetUppercase | undefined;
            summary?: string | undefined;
            description?: string | undefined;
            helpLabel?: string | undefined;
            helpGroup?: string | undefined;
            env?: string | undefined;
            hidden?: boolean | undefined;
            required?: boolean | undefined;
            dependsOn?: string[] | undefined;
            exclusive?: string[] | undefined;
            exactlyOne?: string[] | undefined;
            relationships?: import("@oclif/core/lib/interfaces/parser").Relationship[] | undefined;
            deprecated?: true | import("@oclif/core/lib/interfaces/parser").Deprecation | undefined;
            aliases?: string[] | undefined;
            deprecateAliases?: boolean | undefined;
            parse: import("@oclif/core/lib/interfaces/parser").FlagParser<string, string, any>;
            type: "option";
            helpValue?: string | undefined;
            options?: string[] | undefined;
            multiple: true;
            defaultHelp?: import("@oclif/core/lib/interfaces/parser").DefaultHelp<string, Record<string, unknown>> | undefined;
            input: string[];
            default?: import("@oclif/core/lib/interfaces").Default<string[] | undefined, Record<string, unknown>>;
        };
        'data-path': import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        pretty: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
    };
    run(): Promise<void>;
}
