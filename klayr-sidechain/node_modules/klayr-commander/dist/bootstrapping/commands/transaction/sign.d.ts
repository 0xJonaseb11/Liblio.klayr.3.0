import { Command } from '@oclif/core';
import * as apiClient from '@klayr/api-client';
import { Application, Modules, Types } from 'klayr-framework';
import { PromiseResolvedType } from '../../../types';
export declare abstract class SignCommand extends Command {
    static description: string;
    static args: {
        name: string;
        required: boolean;
        description: string;
    }[];
    static flags: {
        passphrase: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        json: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        offline: {
            dependsOn: string[];
            exclusive: string[];
            name: string;
            char?: import("@oclif/core/lib/interfaces").AlphabetLowercase | import("@oclif/core/lib/interfaces").AlphabetUppercase | undefined;
            summary?: string | undefined;
            description?: string | undefined;
            helpLabel?: string | undefined;
            helpGroup?: string | undefined;
            env?: string | undefined;
            hidden?: boolean | undefined;
            required?: boolean | undefined;
            exactlyOne?: string[] | undefined;
            relationships?: import("@oclif/core/lib/interfaces/parser").Relationship[] | undefined;
            deprecated?: true | import("@oclif/core/lib/interfaces/parser").Deprecation | undefined;
            aliases?: string[] | undefined;
            deprecateAliases?: boolean | undefined;
            parse: import("@oclif/core/lib/interfaces/parser").FlagParser<boolean, boolean, any>;
            type: "boolean";
            allowNo: boolean;
            default?: import("@oclif/core/lib/interfaces").Default<boolean, Record<string, unknown>> | undefined;
        };
        'mandatory-keys': import("@oclif/core/lib/interfaces").OptionFlag<string[] | undefined>;
        'optional-keys': import("@oclif/core/lib/interfaces").OptionFlag<string[] | undefined>;
        'chain-id': import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        'data-path': import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        'key-derivation-path': import("@oclif/core/lib/interfaces").OptionFlag<string>;
        pretty: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
    };
    static examples: string[];
    protected _client: PromiseResolvedType<ReturnType<typeof apiClient.createIPCClient>> | undefined;
    protected _schema: Types.RegisteredSchema;
    protected _metadata: Modules.ModuleMetadataJSON[];
    protected _dataPath: string;
    run(): Promise<void>;
    printJSON(pretty: boolean, message?: Record<string, unknown>): void;
    finally(error?: Error | string): Promise<void>;
    abstract getApplication(config: Types.PartialApplicationConfig): Application;
}
