import * as apiClient from '@klayr/api-client';
import { Command } from '@oclif/core';
import { Application, Types, Modules } from 'klayr-framework';
import { PromiseResolvedType } from '../../../types';
export declare abstract class CreateCommand extends Command {
    static strict: boolean;
    static description: string;
    static args: {
        name: string;
        required: boolean;
        description: string;
    }[];
    static examples: string[];
    static flags: {
        passphrase: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        params: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        json: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        offline: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        send: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        'no-signature': import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        'chain-id': import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        nonce: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        'sender-public-key': import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        'data-path': import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        'key-derivation-path': import("@oclif/core/lib/interfaces").OptionFlag<string>;
        pretty: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        file: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
    };
    protected _client: PromiseResolvedType<ReturnType<typeof apiClient.createIPCClient>> | undefined;
    protected _schema: Types.RegisteredSchema;
    protected _metadata: Modules.ModuleMetadataJSON[];
    protected _dataPath: string;
    run(): Promise<void>;
    printJSON(pretty: boolean, message?: Record<string, unknown>): void;
    finally(): Promise<void>;
    abstract getApplication(config: Types.PartialApplicationConfig): Application;
}
