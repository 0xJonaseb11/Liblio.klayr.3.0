"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StakerStore = exports.stakerStoreSchema = void 0;
const lisk_db_1 = require("@liskhq/lisk-db");
const base_store_1 = require("../../base_store");
const constants_1 = require("../constants");
exports.stakerStoreSchema = {
    $id: '/pos/staker',
    type: 'object',
    required: ['stakes', 'pendingUnlocks'],
    properties: {
        stakes: {
            type: 'array',
            fieldNumber: 1,
            items: {
                type: 'object',
                required: ['validatorAddress', 'amount', 'sharingCoefficients'],
                properties: {
                    validatorAddress: {
                        dataType: 'bytes',
                        fieldNumber: 1,
                        format: 'klayr32',
                    },
                    amount: {
                        dataType: 'uint64',
                        fieldNumber: 2,
                    },
                    sharingCoefficients: {
                        type: 'array',
                        fieldNumber: 3,
                        items: {
                            type: 'object',
                            required: ['tokenID', 'coefficient'],
                            properties: {
                                tokenID: {
                                    dataType: 'bytes',
                                    fieldNumber: 1,
                                    minLength: constants_1.TOKEN_ID_LENGTH,
                                    maxLength: constants_1.TOKEN_ID_LENGTH,
                                },
                                coefficient: {
                                    dataType: 'bytes',
                                    fieldNumber: 2,
                                    maxLength: constants_1.MAX_NUMBER_BYTES_Q96,
                                },
                            },
                        },
                    },
                },
            },
        },
        pendingUnlocks: {
            type: 'array',
            fieldNumber: 2,
            items: {
                type: 'object',
                required: ['validatorAddress', 'amount', 'unstakeHeight'],
                properties: {
                    validatorAddress: {
                        dataType: 'bytes',
                        fieldNumber: 1,
                        format: 'klayr32',
                    },
                    amount: {
                        dataType: 'uint64',
                        fieldNumber: 2,
                    },
                    unstakeHeight: {
                        dataType: 'uint32',
                        fieldNumber: 3,
                    },
                },
            },
        },
    },
};
class StakerStore extends base_store_1.BaseStore {
    constructor() {
        super(...arguments);
        this.schema = exports.stakerStoreSchema;
    }
    async getOrDefault(context, address) {
        try {
            const stakerData = await this.get(context, address);
            return stakerData;
        }
        catch (error) {
            if (!(error instanceof lisk_db_1.NotFoundError)) {
                throw error;
            }
            const stakerData = {
                stakes: [],
                pendingUnlocks: [],
            };
            return stakerData;
        }
    }
}
exports.StakerStore = StakerStore;
//# sourceMappingURL=staker.js.map