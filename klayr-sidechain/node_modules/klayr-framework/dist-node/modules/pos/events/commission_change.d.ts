/// <reference types="node" />
import { BaseEvent, EventQueuer } from '../../base_event';
export interface CommissionChangeEventData {
    validatorAddress: Buffer;
    oldCommission: number;
    newCommission: number;
}
export declare const commissionChangeEventParams: {
    $id: string;
    type: string;
    required: string[];
    properties: {
        validatorAddress: {
            dataType: string;
            format: string;
            fieldNumber: number;
        };
        oldCommission: {
            dataType: string;
            fieldNumber: number;
        };
        newCommission: {
            dataType: string;
            fieldNumber: number;
        };
    };
};
export declare class CommissionChangeEvent extends BaseEvent<CommissionChangeEventData> {
    schema: {
        $id: string;
        type: string;
        required: string[];
        properties: {
            validatorAddress: {
                dataType: string;
                format: string;
                fieldNumber: number;
            };
            oldCommission: {
                dataType: string;
                fieldNumber: number;
            };
            newCommission: {
                dataType: string;
                fieldNumber: number;
            };
        };
    };
    log(ctx: EventQueuer, data: CommissionChangeEventData): void;
}
