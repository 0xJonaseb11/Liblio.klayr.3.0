"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClaimRewardsCommand = void 0;
const base_command_1 = require("../../base_command");
const validator_1 = require("../stores/validator");
const staker_1 = require("../stores/staker");
class ClaimRewardsCommand extends base_command_1.BaseCommand {
    addDependencies(args) {
        this._internalMethod = args.internalMethod;
    }
    async execute(context) {
        const { transaction: { senderAddress }, getMethodContext, } = context;
        const validatorStore = this.stores.get(validator_1.ValidatorStore);
        const stakerStore = this.stores.get(staker_1.StakerStore);
        const stakerData = await stakerStore.get(context, senderAddress);
        for (const sentStake of stakerData.stakes) {
            const validator = await validatorStore.get(context, sentStake.validatorAddress);
            await this._internalMethod.assignStakeRewards(getMethodContext(), senderAddress, sentStake, validator);
            sentStake.sharingCoefficients = validator.sharingCoefficients;
        }
        await stakerStore.set(context, senderAddress, stakerData);
    }
}
exports.ClaimRewardsCommand = ClaimRewardsCommand;
//# sourceMappingURL=claim_rewards.js.map