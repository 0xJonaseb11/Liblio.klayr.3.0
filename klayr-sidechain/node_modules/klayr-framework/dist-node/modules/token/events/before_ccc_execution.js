"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BeforeCCCExecutionEvent = exports.beforeCCCExecutionEventSchema = void 0;
const base_event_1 = require("../../base_event");
const constants_1 = require("../constants");
exports.beforeCCCExecutionEventSchema = {
    $id: '/token/events/beforeCCCExecution',
    type: 'object',
    required: ['ccmID', 'messageFeeTokenID', 'relayerAddress', 'result'],
    properties: {
        ccmID: {
            dataType: 'bytes',
            minLength: constants_1.HASH_LENGTH,
            maxLength: constants_1.HASH_LENGTH,
            fieldNumber: 1,
        },
        messageFeeTokenID: {
            dataType: 'bytes',
            minLength: constants_1.TOKEN_ID_LENGTH,
            maxLength: constants_1.TOKEN_ID_LENGTH,
            fieldNumber: 2,
        },
        relayerAddress: {
            dataType: 'bytes',
            format: 'klayr32',
            fieldNumber: 3,
        },
        result: {
            dataType: 'uint32',
            fieldNumber: 4,
        },
    },
};
class BeforeCCCExecutionEvent extends base_event_1.BaseEvent {
    constructor() {
        super(...arguments);
        this.schema = exports.beforeCCCExecutionEventSchema;
    }
    log(ctx, data) {
        this.add(ctx, { ...data, result: 0 }, [
            data.relayerAddress,
            data.messageFeeTokenID,
        ]);
    }
    error(ctx, data, result) {
        this.add(ctx, { ...data, result }, [data.relayerAddress, data.messageFeeTokenID], true);
    }
}
exports.BeforeCCCExecutionEvent = BeforeCCCExecutionEvent;
//# sourceMappingURL=before_ccc_execution.js.map