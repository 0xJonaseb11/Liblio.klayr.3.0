"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AllNFTsFromCollectionSupportedEvent = exports.allNFTsFromCollectionSupportedEventSchema = void 0;
const base_event_1 = require("../../base_event");
const constants_1 = require("../constants");
exports.allNFTsFromCollectionSupportedEventSchema = {
    $id: '/nft/events/allNFTsFromCollectionSupported',
    type: 'object',
    required: ['chainID', 'collectionID'],
    properties: {
        chainID: {
            dataType: 'bytes',
            minLength: constants_1.LENGTH_CHAIN_ID,
            maxLength: constants_1.LENGTH_CHAIN_ID,
            fieldNumber: 1,
        },
        collectionID: {
            dataType: 'bytes',
            minLength: constants_1.LENGTH_COLLECTION_ID,
            maxLength: constants_1.LENGTH_COLLECTION_ID,
            fieldNumber: 2,
        },
    },
};
class AllNFTsFromCollectionSupportedEvent extends base_event_1.BaseEvent {
    constructor() {
        super(...arguments);
        this.schema = exports.allNFTsFromCollectionSupportedEventSchema;
    }
    log(ctx, data) {
        this.add(ctx, data, [data.chainID, data.collectionID]);
    }
}
exports.AllNFTsFromCollectionSupportedEvent = AllNFTsFromCollectionSupportedEvent;
//# sourceMappingURL=all_nfts_from_collection_suppported.js.map