import { Schema } from '@klayr/codec';
import { CommandVerifyContext, CommandExecuteContext, VerificationResult } from '../state_machine/types';
import { NamedRegistry } from './named_registry';
export declare abstract class BaseCommand<T = unknown> {
    protected stores: NamedRegistry;
    protected events: NamedRegistry;
    schema: Schema;
    get name(): string;
    constructor(stores: NamedRegistry, events: NamedRegistry);
    verify?(context: CommandVerifyContext<T>): Promise<VerificationResult>;
    abstract execute(context: CommandExecuteContext<T>): Promise<void>;
}
