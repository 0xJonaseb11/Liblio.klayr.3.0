"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateGeneratorKeyCommand = void 0;
const base_command_1 = require("../../base_command");
const schemas_1 = require("../schemas");
const constants_1 = require("../constants");
const state_machine_1 = require("../../../state_machine");
const stores_1 = require("../stores");
class UpdateGeneratorKeyCommand extends base_command_1.BaseCommand {
    constructor() {
        super(...arguments);
        this.schema = schemas_1.updateGeneratorKeySchema;
    }
    get name() {
        return constants_1.COMMAND_UPDATE_KEY;
    }
    addDependencies(validatorsMethod) {
        this._validatorsMethod = validatorsMethod;
    }
    async verify(context) {
        const validatorExists = await this.stores
            .get(stores_1.ValidatorStore)
            .has(context, context.transaction.senderAddress);
        if (!validatorExists) {
            throw new Error('Validator does not exist.');
        }
        return {
            status: state_machine_1.VerifyStatus.OK,
        };
    }
    async execute(context) {
        const { generatorKey } = context.params;
        await this._validatorsMethod.setValidatorGeneratorKey(context, context.transaction.senderAddress, generatorKey);
    }
}
exports.UpdateGeneratorKeyCommand = UpdateGeneratorKeyCommand;
//# sourceMappingURL=update_generator_key.js.map