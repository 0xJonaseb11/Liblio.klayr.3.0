import { BaseModule, ModuleInitArgs, ModuleMetadata } from '../base_module';
import { PoAMethod } from './method';
import { PoAEndpoint } from './endpoint';
import { BlockAfterExecuteContext, GenesisBlockExecuteContext } from '../../state_machine';
import { FeeMethod, ValidatorsMethod, RandomMethod } from './types';
import { RegisterAuthorityCommand } from './commands/register_authority';
import { UpdateAuthorityCommand } from './commands/update_authority';
import { UpdateGeneratorKeyCommand } from './commands/update_generator_key';
export declare class PoAModule extends BaseModule {
    method: PoAMethod;
    endpoint: PoAEndpoint;
    private _randomMethod;
    private _validatorsMethod;
    private _feeMethod;
    private readonly _registerAuthorityCommand;
    private readonly _updateAuthorityCommand;
    private readonly _updateGeneratorKeyCommand;
    private _moduleConfig;
    commands: (RegisterAuthorityCommand | UpdateAuthorityCommand | UpdateGeneratorKeyCommand)[];
    constructor();
    get name(): string;
    addDependencies(validatorsMethod: ValidatorsMethod, feeMethod: FeeMethod, randomMethod: RandomMethod): void;
    metadata(): ModuleMetadata;
    init(args: ModuleInitArgs): Promise<void>;
    afterTransactionsExecute(context: BlockAfterExecuteContext): Promise<void>;
    initGenesisState(context: GenesisBlockExecuteContext): Promise<void>;
    finalizeGenesisState(context: GenesisBlockExecuteContext): Promise<void>;
}
