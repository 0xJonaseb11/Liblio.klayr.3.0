/// <reference types="node" />
import { BaseStore } from '../../base_store';
import { ActiveValidator } from '../types';
export interface ChainValidators {
    activeValidators: ActiveValidator[];
    certificateThreshold: bigint;
}
export declare const chainValidatorsSchema: {
    $id: string;
    type: string;
    required: string[];
    properties: {
        activeValidators: {
            type: string;
            fieldNumber: number;
            minItems: number;
            maxItems: number;
            items: {
                type: string;
                required: string[];
                properties: {
                    blsKey: {
                        dataType: string;
                        minLength: number;
                        maxLength: number;
                        fieldNumber: number;
                    };
                    bftWeight: {
                        dataType: string;
                        fieldNumber: number;
                    };
                };
            };
        };
        certificateThreshold: {
            dataType: string;
            fieldNumber: number;
        };
    };
};
export declare class ChainValidatorsStore extends BaseStore<ChainValidators> {
    schema: {
        $id: string;
        type: string;
        required: string[];
        properties: {
            activeValidators: {
                type: string;
                fieldNumber: number;
                minItems: number;
                maxItems: number;
                items: {
                    type: string;
                    required: string[];
                    properties: {
                        blsKey: {
                            dataType: string;
                            minLength: number;
                            maxLength: number;
                            fieldNumber: number;
                        };
                        bftWeight: {
                            dataType: string;
                            fieldNumber: number;
                        };
                    };
                };
            };
            certificateThreshold: {
                dataType: string;
                fieldNumber: number;
            };
        };
    };
    get storePrefix(): Buffer;
}
