"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EVENT_TOPIC_CCM_EXECUTION = exports.CONTEXT_STORE_KEY_CCM_PROCESSING = exports.EVENT_NAME_INVALID_OUTBOX_ROOT_VERIFICATION = exports.EVENT_NAME_INVALID_CERTIFICATE_SIGNATURE = exports.EVENT_NAME_CCM_SEND_SUCCESS = exports.EVENT_NAME_CCM_PROCESSED = exports.EVENT_NAME_CHAIN_ACCOUNT_UPDATED = exports.RECOVERED_STORE_VALUE = exports.COMMAND_NAME_LIVENESS_TERMINATION = exports.COMMAND_NAME_STATE_RECOVERY_INIT = exports.COMMAND_NAME_MESSAGE_RECOVERY = exports.COMMAND_NAME_STATE_RECOVERY = exports.COMMAND_NAME_MAINCHAIN_REG = exports.COMMAND_NAME_SIDECHAIN_REG = exports.CCM_SENT_STATUS_SUCCESS = exports.CROSS_CHAIN_COMMAND_SIDECHAIN_TERMINATED = exports.CROSS_CHAIN_COMMAND_CHANNEL_TERMINATED = exports.CROSS_CHAIN_COMMAND_REGISTRATION = exports.STORE_PREFIX = exports.MIN_RETURN_FEE_PER_BYTE_BEDDOWS = exports.SUBSTORE_PREFIX_LENGTH = exports.CHAIN_ID_STRING_LENGTH = exports.CHAIN_ID_LENGTH = exports.MAX_CROSS_CHAIN_COMMAND_NAME_LENGTH = exports.MIN_CROSS_CHAIN_COMMAND_NAME_LENGTH = exports.MAX_MODULE_NAME_LENGTH = exports.MIN_MODULE_NAME_LENGTH = exports.HASH_LENGTH = exports.MAX_CHAIN_NAME_LENGTH = exports.MIN_CHAIN_NAME_LENGTH = exports.MESSAGE_TAG_CERTIFICATE = exports.MAX_UINT64 = exports.MAX_UINT32 = exports.MAX_LENGTH_NAME = exports.MAX_LENGTH_AGGREGATION_BITS = exports.MAX_NUM_VALIDATORS = exports.CHAIN_REGISTRATION_FEE = exports.EMPTY_HASH = exports.EMPTY_BYTES = exports.EMPTY_FEE_ADDRESS = exports.MAX_CCM_SIZE = exports.LIVENESS_LIMIT = exports.MESSAGE_TAG_CHAIN_REG = exports.NUMBER_ACTIVE_VALIDATORS_MAINCHAIN = exports.SMT_KEY_LENGTH = exports.BLS_SIGNATURE_LENGTH = exports.BLS_PUBLIC_KEY_LENGTH = exports.MAX_RESERVED_ERROR_STATUS = exports.CHAIN_NAME_MAINCHAIN = exports.MODULE_NAME_INTEROPERABILITY = void 0;
exports.EmptyCCM = void 0;
const cryptography_1 = require("@klayr/cryptography");
exports.MODULE_NAME_INTEROPERABILITY = 'interoperability';
exports.CHAIN_NAME_MAINCHAIN = 'klayr_mainchain';
exports.MAX_RESERVED_ERROR_STATUS = 63;
exports.BLS_PUBLIC_KEY_LENGTH = 48;
exports.BLS_SIGNATURE_LENGTH = 96;
exports.SMT_KEY_LENGTH = 38;
exports.NUMBER_ACTIVE_VALIDATORS_MAINCHAIN = 51;
exports.MESSAGE_TAG_CHAIN_REG = 'KLY_CRM_';
exports.LIVENESS_LIMIT = 2419200;
exports.MAX_CCM_SIZE = 10240;
exports.EMPTY_FEE_ADDRESS = Buffer.alloc(0);
exports.EMPTY_BYTES = Buffer.alloc(0);
exports.EMPTY_HASH = cryptography_1.utils.hash(exports.EMPTY_BYTES);
exports.CHAIN_REGISTRATION_FEE = BigInt(1000000000);
exports.MAX_NUM_VALIDATORS = 199;
exports.MAX_LENGTH_AGGREGATION_BITS = Math.ceil(exports.MAX_NUM_VALIDATORS / 8);
exports.MAX_LENGTH_NAME = 40;
exports.MAX_UINT32 = 4294967295;
exports.MAX_UINT64 = BigInt('18446744073709551615');
exports.MESSAGE_TAG_CERTIFICATE = 'KLY_CE_';
exports.MIN_CHAIN_NAME_LENGTH = 1;
exports.MAX_CHAIN_NAME_LENGTH = 32;
exports.HASH_LENGTH = 32;
exports.MIN_MODULE_NAME_LENGTH = 1;
exports.MAX_MODULE_NAME_LENGTH = 32;
exports.MIN_CROSS_CHAIN_COMMAND_NAME_LENGTH = 1;
exports.MAX_CROSS_CHAIN_COMMAND_NAME_LENGTH = 32;
exports.CHAIN_ID_LENGTH = 4;
exports.CHAIN_ID_STRING_LENGTH = 2 * exports.CHAIN_ID_LENGTH;
exports.SUBSTORE_PREFIX_LENGTH = 2;
exports.MIN_RETURN_FEE_PER_BYTE_BEDDOWS = BigInt(1000);
exports.STORE_PREFIX = Buffer.from([0x83, 0xed, 0x0d, 0x25]);
exports.CROSS_CHAIN_COMMAND_REGISTRATION = 'registration';
exports.CROSS_CHAIN_COMMAND_CHANNEL_TERMINATED = 'channelTerminated';
exports.CROSS_CHAIN_COMMAND_SIDECHAIN_TERMINATED = 'sidechainTerminated';
exports.CCM_SENT_STATUS_SUCCESS = 0;
exports.COMMAND_NAME_SIDECHAIN_REG = 'registerSidechain';
exports.COMMAND_NAME_MAINCHAIN_REG = 'registerMainchain';
exports.COMMAND_NAME_STATE_RECOVERY = 'recoverState';
exports.COMMAND_NAME_MESSAGE_RECOVERY = 'recoverMessage';
exports.COMMAND_NAME_STATE_RECOVERY_INIT = 'initializeStateRecovery';
exports.COMMAND_NAME_LIVENESS_TERMINATION = 'terminateSidechainForLiveness';
exports.RECOVERED_STORE_VALUE = Buffer.alloc(32);
exports.EVENT_NAME_CHAIN_ACCOUNT_UPDATED = 'chainAccountUpdated';
exports.EVENT_NAME_CCM_PROCESSED = 'ccmProcessed';
exports.EVENT_NAME_CCM_SEND_SUCCESS = 'ccmSendSucess';
exports.EVENT_NAME_INVALID_CERTIFICATE_SIGNATURE = 'invalidCertificateSignature';
exports.EVENT_NAME_INVALID_OUTBOX_ROOT_VERIFICATION = 'invalidOutboxRootVerification';
exports.CONTEXT_STORE_KEY_CCM_PROCESSING = 'CONTEXT_STORE_KEY_CCM_PROCESSING';
exports.EVENT_TOPIC_CCM_EXECUTION = Buffer.from([5]);
exports.EmptyCCM = {
    module: '',
    crossChainCommand: '',
    nonce: BigInt(0),
    fee: BigInt(0),
    sendingChainID: exports.EMPTY_BYTES,
    receivingChainID: exports.EMPTY_BYTES,
    params: exports.EMPTY_BYTES,
    status: 0,
};
//# sourceMappingURL=constants.js.map