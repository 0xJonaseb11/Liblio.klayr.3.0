import { CommandExecuteContext, CommandVerifyContext, VerificationResult } from '../../../../state_machine';
import { BaseInteroperabilityCommand } from '../../base_interoperability_command';
import { TerminateSidechainForLivenessParams } from '../../types';
import { MainchainInteroperabilityInternalMethod } from '../internal_method';
export declare class TerminateSidechainForLivenessCommand extends BaseInteroperabilityCommand<MainchainInteroperabilityInternalMethod> {
    schema: {
        $id: string;
        type: string;
        required: string[];
        properties: {
            chainID: {
                dataType: string;
                fieldNumber: number;
                minLength: number;
                maxLength: number;
            };
        };
    };
    verify(context: CommandVerifyContext<TerminateSidechainForLivenessParams>): Promise<VerificationResult>;
    execute(context: CommandExecuteContext<TerminateSidechainForLivenessParams>): Promise<void>;
}
