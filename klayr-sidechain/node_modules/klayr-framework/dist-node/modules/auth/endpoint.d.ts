import { Schema } from '@klayr/codec';
import { ModuleEndpointContext } from '../../types';
import { BaseEndpoint } from '../base_endpoint';
import { AuthAccountJSON, VerifyEndpointResultJSON, SortedMultisignatureGroup, MultiSigRegMsgTag } from './types';
export declare class AuthEndpoint extends BaseEndpoint {
    getAuthAccount(context: ModuleEndpointContext): Promise<AuthAccountJSON>;
    isValidSignature(context: ModuleEndpointContext): Promise<VerifyEndpointResultJSON>;
    isValidNonce(context: ModuleEndpointContext): Promise<VerifyEndpointResultJSON>;
    getMultiSigRegMsgSchema(_context: ModuleEndpointContext): Promise<{
        schema: Schema;
    }>;
    sortMultisignatureGroup(context: ModuleEndpointContext): SortedMultisignatureGroup;
    getMultiSigRegMsgTag(): MultiSigRegMsgTag;
}
