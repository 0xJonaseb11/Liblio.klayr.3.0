/// <reference types="node" />
import { BaseStore } from '../../base_store';
export interface ValidatorSeedReveal {
    generatorAddress: Buffer;
    seedReveal: Buffer;
    height: number;
    valid: boolean;
}
export interface ValidatorReveals {
    validatorReveals: ValidatorSeedReveal[];
}
export declare const seedRevealSchema: {
    $id: string;
    type: string;
    required: string[];
    properties: {
        validatorReveals: {
            type: string;
            fieldNumber: number;
            items: {
                type: string;
                required: string[];
                properties: {
                    generatorAddress: {
                        dataType: string;
                        minLength: number;
                        maxLength: number;
                        fieldNumber: number;
                    };
                    seedReveal: {
                        dataType: string;
                        minLength: number;
                        maxLength: number;
                        fieldNumber: number;
                    };
                    height: {
                        dataType: string;
                        fieldNumber: number;
                    };
                    valid: {
                        dataType: string;
                        fieldNumber: number;
                    };
                };
            };
        };
    };
};
export declare class ValidatorRevealsStore extends BaseStore<ValidatorReveals> {
    schema: {
        $id: string;
        type: string;
        required: string[];
        properties: {
            validatorReveals: {
                type: string;
                fieldNumber: number;
                items: {
                    type: string;
                    required: string[];
                    properties: {
                        generatorAddress: {
                            dataType: string;
                            minLength: number;
                            maxLength: number;
                            fieldNumber: number;
                        };
                        seedReveal: {
                            dataType: string;
                            minLength: number;
                            maxLength: number;
                            fieldNumber: number;
                        };
                        height: {
                            dataType: string;
                            fieldNumber: number;
                        };
                        valid: {
                            dataType: string;
                            fieldNumber: number;
                        };
                    };
                };
            };
        };
    };
}
