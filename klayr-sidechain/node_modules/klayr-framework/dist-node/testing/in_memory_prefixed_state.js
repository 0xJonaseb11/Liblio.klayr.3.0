"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InMemoryPrefixedStateDB = void 0;
const lisk_db_1 = require("@liskhq/lisk-db");
class InMemoryPrefixedStateDB {
    constructor() {
        this._db = new lisk_db_1.InMemoryDatabase();
    }
    async get(key) {
        return this._db.get(key);
    }
    async has(key) {
        return this._db.has(key);
    }
    async set(key, value) {
        return this._db.set(key, value);
    }
    async del(key) {
        return this._db.del(key);
    }
    async range(options) {
        const stream = this._db.iterate(options);
        const pairs = await new Promise((resolve, reject) => {
            const result = [];
            stream
                .on('data', ({ key, value }) => {
                result.push({ key, value });
            })
                .on('error', error => {
                reject(error);
            })
                .on('end', () => {
                resolve(result);
            });
        });
        return pairs;
    }
    snapshot() {
        return 0;
    }
    restoreSnapshot() { }
    close() { }
}
exports.InMemoryPrefixedStateDB = InMemoryPrefixedStateDB;
//# sourceMappingURL=in_memory_prefixed_state.js.map