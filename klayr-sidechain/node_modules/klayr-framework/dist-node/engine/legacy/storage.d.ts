/// <reference types="node" />
import { Database } from '@liskhq/lisk-db';
import { LegacyChainBracketInfo } from './types';
export declare class Storage {
    private readonly _db;
    constructor(db: Database);
    getTransactionByID(id: Buffer): Promise<Buffer>;
    getBlockByID(id: Buffer): Promise<Buffer>;
    getBlockByHeight(height: number): Promise<Buffer>;
    getBlocksByHeightBetween(fromHeight: number, toHeight: number): Promise<Buffer[]>;
    isBlockPersisted(blockID: Buffer): Promise<boolean>;
    isBlockHeightPersisted(height: number): Promise<boolean>;
    getTransactionsByBlockID(blockID: Buffer): Promise<Buffer[]>;
    saveBlock(blockID: Buffer, height: number, block: Buffer, payload: Buffer[]): Promise<void>;
    getBracketInfo(snapshotBlockID: Buffer): Promise<LegacyChainBracketInfo>;
    setBracketInfo(snapshotBlockID: Buffer, bracketInfo: LegacyChainBracketInfo): Promise<void>;
    hasBracketInfo(snapshotBlockID: Buffer): Promise<boolean>;
    private _getBlockIDsBetweenHeights;
}
