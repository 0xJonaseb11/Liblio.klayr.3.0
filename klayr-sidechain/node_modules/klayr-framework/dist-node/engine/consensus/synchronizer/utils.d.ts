import { Chain } from '@klayr/chain';
import { BlockExecutor } from './type';
import { Logger } from '../../../logger';
export declare const restoreBlocks: (chainModule: Chain, processorModule: BlockExecutor) => Promise<boolean>;
export declare const clearBlocksTempTable: (chainModule: Chain) => Promise<void>;
export declare const deleteBlocksAfterHeight: (processorModule: BlockExecutor, chainModule: Chain, logger: Logger, desiredHeight: number, backup?: boolean) => Promise<void>;
export declare const restoreBlocksUponStartup: (logger: Logger, chainModule: Chain, blockExecutor: BlockExecutor) => Promise<void>;
export declare const computeBlockHeightsList: (finalizedHeight: number, activeValidators: number, listSizeLimit: number, currentRound: number) => number[];
export declare const computeLargestSubsetMaxBy: <T>(arrayOfObjects: T[], propertySelectorFunc: (param: T) => number) => T[];
