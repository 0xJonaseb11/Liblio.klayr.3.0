/// <reference types="node" />
import { Database } from '@liskhq/lisk-db';
import { Chain } from '@klayr/chain';
import { Logger } from '../../logger';
import { Network } from '../network';
import { CommitPool } from './certificate_generation/commit_pool';
import { BaseNetworkEndpoint } from '../network/base_network_endpoint';
export interface EndpointArgs {
    logger: Logger;
    chain: Chain;
    network: Network;
    commitPool: CommitPool;
    db: Database;
}
export declare class NetworkEndpoint extends BaseNetworkEndpoint {
    private readonly _logger;
    private readonly _chain;
    private readonly _network;
    private readonly _commitPool;
    private readonly _db;
    private readonly _metrics;
    constructor(args: EndpointArgs);
    handleRPCGetLastBlock(peerId: string): Buffer;
    handleRPCGetBlocksFromId(data: unknown, peerId: string): Promise<Buffer>;
    handleRPCGetHighestCommonBlock(data: unknown, peerId: string): Promise<Buffer | undefined>;
    handleEventSingleCommit(data: unknown, peerId: string): Promise<void>;
}
