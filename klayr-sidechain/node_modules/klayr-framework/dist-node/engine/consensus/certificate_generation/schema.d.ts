/// <reference types="node" />
export declare const unsignedCertificateSchema: {
    $id: string;
    type: string;
    required: string[];
    properties: {
        blockID: {
            dataType: string;
            minLength: number;
            maxLength: number;
            fieldNumber: number;
        };
        height: {
            dataType: string;
            fieldNumber: number;
        };
        timestamp: {
            dataType: string;
            fieldNumber: number;
        };
        stateRoot: {
            dataType: string;
            minLength: number;
            maxLength: number;
            fieldNumber: number;
        };
        validatorsHash: {
            dataType: string;
            minLength: number;
            maxLength: number;
            fieldNumber: number;
        };
    };
};
export declare const certificateSchema: {
    $id: string;
    type: string;
    required: string[];
    properties: {
        timestamp: {
            minimum: number;
            dataType: string;
            fieldNumber: number;
        };
        aggregationBits: {
            dataType: string;
            fieldNumber: number;
            maxLength: number;
        };
        signature: {
            dataType: string;
            minLength: number;
            maxLength: number;
            fieldNumber: number;
        };
        blockID: {
            dataType: string;
            minLength: number;
            maxLength: number;
            fieldNumber: number;
        };
        height: {
            dataType: string;
            fieldNumber: number;
        };
        stateRoot: {
            dataType: string;
            minLength: number;
            maxLength: number;
            fieldNumber: number;
        };
        validatorsHash: {
            dataType: string;
            minLength: number;
            maxLength: number;
            fieldNumber: number;
        };
    };
};
export declare const singleCommitSchema: {
    $id: string;
    type: string;
    required: string[];
    properties: {
        blockID: {
            dataType: string;
            fieldNumber: number;
            minLength: number;
            maxLength: number;
        };
        height: {
            dataType: string;
            fieldNumber: number;
        };
        validatorAddress: {
            dataType: string;
            minLength: number;
            maxLength: number;
            fieldNumber: number;
            format: string;
        };
        certificateSignature: {
            dataType: string;
            fieldNumber: number;
            minLength: number;
            maxLength: number;
        };
    };
};
export interface SingleCommitsNetworkPacket {
    commits: Buffer[];
}
export declare const singleCommitsNetworkPacketSchema: {
    $id: string;
    type: string;
    required: string[];
    properties: {
        commits: {
            type: string;
            fieldNumber: number;
            items: {
                dataType: string;
            };
        };
    };
};
export declare const aggregateCommitSchema: {
    $id: string;
    type: string;
    required: string[];
    properties: {
        height: {
            dataType: string;
            fieldNumber: number;
        };
        aggregationBits: {
            dataType: string;
            fieldNumber: number;
        };
        certificateSignature: {
            dataType: string;
            minLength: number;
            maxLength: number;
            fieldNumber: number;
        };
    };
};
