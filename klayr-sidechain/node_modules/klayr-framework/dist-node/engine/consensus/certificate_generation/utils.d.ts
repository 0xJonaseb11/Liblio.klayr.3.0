/// <reference types="node" />
import { BlockHeader } from '@klayr/chain';
import { Certificate, UnsignedCertificate } from './types';
export declare const computeUnsignedCertificateFromBlockHeader: (blockHeader: BlockHeader) => UnsignedCertificate;
export declare const signCertificate: (sk: Buffer, chainID: Buffer, unsignedCertificate: UnsignedCertificate) => Buffer;
export declare const verifySingleCertificateSignature: (pk: Buffer, signature: Buffer, chainID: Buffer, unsignedCertificate: UnsignedCertificate) => boolean;
export declare const verifyAggregateCertificateSignature: (validators: {
    blsKey: Buffer;
    bftWeight: bigint;
}[], threshold: bigint, chainID: Buffer, certificate: Certificate) => boolean;
export declare const getSortedWeightsAndValidatorKeys: (validators: {
    blsKey: Buffer;
    bftWeight: bigint;
}[]) => {
    weights: bigint[];
    validatorKeys: Buffer[];
};
