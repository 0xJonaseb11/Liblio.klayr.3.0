/// <reference types="node" />
import { Chain } from '@klayr/chain';
import { dataStructures } from '@klayr/utils';
import { Database } from '@liskhq/lisk-db';
import { BFTModule } from '../bft';
import { Consensus, Keypair } from './types';
import { Logger } from '../../logger';
export declare class SingleCommitHandler {
    private readonly _logger;
    private readonly _bft;
    private readonly _chain;
    private readonly _consensus;
    private readonly _keypairs;
    private readonly _blockchainDB;
    private readonly _metrics;
    constructor(logger: Logger, chain: Chain, consensus: Consensus, bft: BFTModule, keypairs: dataStructures.BufferMap<Keypair>, blockchainDB: Database);
    initAllSingleCommits(): Promise<void>;
    initSingleCommits(address: Buffer): Promise<void>;
    handleFinalizedHeightChanged(from: number, to: number): Promise<void>;
    private _handleFinalizedHeightChanged;
    private _certifySingleCommitForChangedHeight;
    private _certifySingleCommit;
}
